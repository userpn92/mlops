name: CI

on:
  push:
    branches:
      - main  # Change this to your default branch if it's not 'main'
  pull_request:
    branches:
      - main  # Change this to your default branch if it's not 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Specify the Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build -t mlops .

      - name: Run Docker container
        run: |
          docker run -d -p 8000:8000 mlops

      - name: Wait for the application to start
        run: |
          echo "Waiting for the application to start..."
          for i in {1..10}; do
            if curl -s -o /dev/null -w "%{http_code}" "http://localhost:8000/suggestions/" | grep -q "200"; then
              echo "Application is up!"
              break
            fi
            echo "Waiting for application to start..."
            sleep 5
          done

      - name: Test the application
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "http://localhost:8000/suggestions/" -H "Content-Type: application/json" -d '{"sentence": "Have a <blank> day"}')
          if [ "$response" -ne 200 ]; then
            echo "Failed to get a valid response from the application. HTTP status code: $response"
            exit 1
          fi
          echo "Application responded with status code: $response"

      - name: Build Docker image for Locust
        run: |
          docker build -t locust-test -f Dockerfile.locust .

      - name: Run Locust Load Test
        run: |
          docker run --network host locust-test locust --headless -u 10 -r 2 --run-time 1m --host http://localhost:8000
